// keep list sorted alphabetically
export enum ChainKey {
    AAVEGOTCHI_TESTNET = "aavegotchi-testnet",
    APTOS = "aptos",
    APTOS_TESTNET = "aptos-testnet",
    APTOS_TESTNET_SANDBOX = "aptos-testnet-sandbox",
    ARBITRUM = "arbitrum",
    ARBITRUM_GOERLI = "arbitrum-goerli",
    ARBITRUM_GOERLI_SANDBOX = "arbitrum-goerli-sandbox",
    ARBITRUM_RINKEBY = "arbitrum-rinkeby",
    ARBITRUM_RINKEBY_SANDBOX = "arbitrum-rinkeby-sandbox",
    ARCANA = "arcana",
    ARCANA_TESTNET = "arcana-testnet",
    ARCANA_TESTNET_SANDBOX = "arcana-testnet-sandbox",
    ASTAR = "astar",
    ASTAR_TESTNET = "astar-testnet",
    ASTAR_TESTNET_SANDBOX = "astar-testnet-sandbox",
    AURORA = "aurora",
    AURORA_TESTNET = "aurora-testnet",
    AURORA_TESTNET_SANDBOX = "aurora-testnet-sandbox",
    AVALANCHE = "avalanche",
    BASE = "base",
    BASE_TESTNET = "base-testnet",
    BLOCKGEN_TESTNET = "blockgen-testnet",
    BOBA = "boba",
    BOBA_TESTNET = "boba-testnet",
    BOBA_TESTNET_SANDBOX = "boba-testnet-sandbox",
    BSC = "bsc",
    BSC_TESTNET = "bsc-testnet",
    BSC_TESTNET_SANDBOX = "bsc-testnet-sandbox",
    CANTO = "canto",
    CANTO_TESTNET = "canto-testnet",
    CASTLECRUSH = "castlecrush",
    CASTLECRUSH_TESTNET = "castlecrush-testnet",
    CASTLECRUSH_TESTNET_SANDBOX = "castlecrush-testnet-sandbox",
    CELO = "celo",
    CELO_TESTNET = "celo-testnet",
    CELO_TESTNET_SANDBOX = "celo-testnet-sandbox",
    COREDAO = "coredao",
    COREDAO_TESTNET = "coredao-testnet",
    DEXALOT = "dexalot",
    DEXALOT_TESTNET = "dexalot-testnet",
    DEXALOT_TESTNET_SANDBOX = "dexalot-testnet-sandbox",
    DFK = "dfk",
    DFK_TESTNET = "dfk-testnet",
    DFK_TESTNET_SANDBOX = "dfk-testnet-sandbox",
    DOS = "dos",
    DOS_TESTNET = "dos-testnet",
    ETHEREUM = "ethereum",
    FANTOM = "fantom",
    FANTOM_TESTNET = "fantom-testnet",
    FANTOM_TESTNET_SANDBOX = "fantom-testnet-sandbox",
    FUJI = "fuji",
    FUJI_SANDBOX = "fuji-sandbox",
    FUSE = "fuse",
    FUSE_TESTNET = "fuse-testnet",
    FUSE_TESTNET_SANDBOX = "fuse-testnet-sandbox",
    GNOSIS = "gnosis",
    GNOSIS_TESTNET = "gnosis-testnet",
    GNOSIS_TESTNET_SANDBOX = "gnosis-testnet-sandbox",
    GOERLI = "goerli",
    GOERLI_MAINNET = "goerli-mainnet",
    GOERLI_SANDBOX = "goerli-sandbox",
    HARMONY = "harmony",
    HARMONY_TESTNET = "harmony-testnet",
    HARMONY_TESTNET_SANDBOX = "harmony-testnet-sandbox",
    INTAIN = "intain",
    INTAIN_TESTNET = "intain-testnet",
    INTAIN_TESTNET_SANDBOX = "intain-testnet-sandbox",
    KAVA = "kava",
    KAVA_TESTNET = "kava-testnet",
    KLAYTN = "klaytn",
    KLAYTN_TESTNET = "klaytn-testnet",
    KOVAN = "kovan",
    KOVAN_SANDBOX = "kovan-sandbox",
    MERITCIRCLE_TESTNET = "meritcircle-testnet",
    MANTLE = "mantle",
    MANTLE_TESTNET = "mantle-testnet",
    METER = "meter",
    METER_TESTNET = "meter-testnet",
    METIS = "metis",
    METIS_TESTNET = "metis-testnet",
    MOONBEAM = "moonbeam",
    MOONBEAM_TESTNET = "moonbeam-testnet",
    MOONBEAM_TESTNET_SANDBOX = "moonbeam-testnet-sandbox",
    MOONRIVER = "moonriver",
    MOONRIVER_TESTNET = "moonriver-testnet",
    MUMBAI = "mumbai",
    MUMBAI_SANDBOX = "mumbai-sandbox",
    NOVA = "nova",
    OKX = "okx",
    OKX_TESTNET = "okx-testnet",
    OPTIMISM = "optimism",
    OPTIMISM_GOERLI = "optimism-goerli",
    OPTIMISM_GOERLI_SANDBOX = "optimism-goerli-sandbox",
    OPTIMISM_KOVAN = "optimism-kovan",
    OPTIMISM_KOVAN_SANDBOX = "optimism-kovan-sandbox",
    POLYGON = "polygon",
    PORTAL = "portal",
    PORTAL_TESTNET = "portal-testnet",
    PORTAL_TESTNET_SANDBOX = "portal-testnet-sandbox",
    RINKEBY = "rinkeby",
    RINKEBY_SANDBOX = "rinkeby-sandbox",
    SEPOLIA = "sepolia",
    SEPOLIA_TESTNET = "sepolia-testnet",
    SHRAPNEL = "shrapnel",
    SHRAPNEL_TESTNET = "shrapnel-testnet",
    SOLANA = "solana",
    SOLANA_TESTNET = "solana-testnet",
    SWIMMER = "swimmer",
    SWIMMER_TESTNET = "swimmer-testnet",
    SWIMMER_TESTNET_SANDBOX = "swimmer-testnet-sandbox",
    TENET = "tenet",
    TENET_TESTNET = "tenet-testnet",
    ZKCONSENSYS = "zkconsensys",
    ZKCONSENSYS_TESTNET = "zkconsensys-testnet",
    ZKPOLYGON = "zkpolygon",
    ZKPOLYGON_TESTNET = "zkpolygon-testnet",
    ZKSYNC = "zksync",
    ZKSYNC_TESTNET = "zksync-testnet",
}
